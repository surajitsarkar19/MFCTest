#if !defined(AFX_CIRCLEPROGRESS_H__E6902683_6164_4E59_928C_250B867E4FD3__INCLUDED_) 
#define AFX_CIRCLEPROGRESS_H__E6902683_6164_4E59_928C_250B867E4FD3__INCLUDED_ 
 
#if _MSC_VER > 1000 
#pragma once 
#endif // _MSC_VER > 1000 
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++ 
 
// NOTE: Do not modify the contents of this file.  If this class is regenerated by 
//  Microsoft Visual C++, your modifications will be overwritten. 
 
///////////////////////////////////////////////////////////////////////////// 
// CCircleProgress wrapper class 
 
class CCircleProgress : public CWnd 
{ 
protected: 
	DECLARE_DYNCREATE(CCircleProgress) 
public: 
	CLSID const& GetClsid() 
	{ 
		static CLSID const clsid 
			= { 0xe233bb06, 0x4de, 0x40a8, { 0x83, 0x23, 0x2d, 0x3a, 0x80, 0x48, 0x4e, 0x70 } }; 
		return clsid; 
	} 
	virtual BOOL Create(LPCTSTR lpszClassName, 
		LPCTSTR lpszWindowName, DWORD dwStyle, 
		const RECT& rect, 
		CWnd* pParentWnd, UINT nID, 
		CCreateContext* pContext = NULL) 
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); } 
 
    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, 
		const RECT& rect, CWnd* pParentWnd, UINT nID, 
		CFile* pPersist = NULL, BOOL bStorage = FALSE, 
		BSTR bstrLicKey = NULL) 
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID, 
		pPersist, bStorage, bstrLicKey); } 
 
// Attributes 
public: 
	short GetPoschange(); 
	void SetPoschange(short); 
	long GetStartColor(); 
	void SetStartColor(long); 
	long GetEndColor(); 
	void SetEndColor(long); 
	long GetBkColor(); 
	void SetBkColor(long); 
	double GetStartAngle(); 
	void SetStartAngle(double); 
	short GetNums(); 
	void SetNums(short); 
	double GetR2(); 
	void SetR2(double); 
	short GetStyle(); 
	void SetStyle(short); 
	double GetValue(); 
	void SetValue(double); 
	double GetMaxValue(); 
	void SetMaxValue(double); 
	double GetMinValue(); 
	void SetMinValue(double); 
	double GetDsubs(); 
	void SetDsubs(double); 
	long GetTextColor(); 
	void SetTextColor(long); 
	short GetDotNumber(); 
	void SetDotNumber(short); 
	CString GetUnit(); 
	void SetUnit(LPCTSTR); 
	BOOL GetBUnit(); 
	void SetBUnit(BOOL); 
	BOOL GetBMove(); 
	void SetBMove(BOOL); 
 
// Operations 
public: 
	void AboutBox(); 
}; 
 
//{{AFX_INSERT_LOCATION}} 
// Microsoft Visual C++ will insert additional declarations immediately before the previous line. 
 
#endif // !defined(AFX_CIRCLEPROGRESS_H__E6902683_6164_4E59_928C_250B867E4FD3__INCLUDED_) 
